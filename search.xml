<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/06/23/%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>文章标题</title>
    <url>/2023/06/14/%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题 1"></a>二级标题 1</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ 代码块</span><br></pre></td></tr></table></figure>

<p>链接: <a href="https://demo.html/">替代文本</a></p>
<h1 id="一级标题-2"><a href="#一级标题-2" class="headerlink" title="一级标题 2"></a>一级标题 2</h1><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight javascript"><figcaption><span>代码标题</span><a href="https://ice.xinglincloud.top">链接替换文本</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><figcaption><span>title</span><a href="https://ice.xinglincloud.top">链接替换文本</a></figcaption><table><tr><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure>

<h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><blockquote class="pullquote [class]"><p>content</p>
</blockquote>

<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><img src="/images/example.jpg" class="center" width="400" height="300" title="图片描述" alt="alt text">
<img src="/images/%E5%8A%A8%E5%9B%BE.gif" class="center" width="200" title="图片描述" alt="alt text">

<img src="https://ts1.cn.mm.bing.net/th/id/R-C.04f3b14de168c069bee372025eb442e6?rik=CnX4w4czxTM%2bxQ&riu=http%3a%2f%2fa2.att.hudong.com%2f70%2f18%2f19300001361541132944184621875.jpg&ehk=37csKv9k5pY%2fETaLPQKv6Hu6ZlcUTtMviCuYmiPsKnA%3d&risl=&pid=ImgRaw&r=0" class="post-image">
## 引用其他文章
<a href="/2023/06/23/%E6%96%87%E6%A1%A3/" title="Hello World">替换文本</a>

<h2 id="hexo-generator-index-pin-top-文章置顶"><a href="#hexo-generator-index-pin-top-文章置顶" class="headerlink" title="hexo-generator-index-pin-top 文章置顶"></a>hexo-generator-index-pin-top 文章置顶</h2><ul>
<li>安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>

<ul>
<li>开启</li>
</ul>
<p>在需要置顶的文章的 Front-matter 区域加上 top: ture ，示例：</p>
<hr>
<p>title: 新增文章置顶<br>author: zhwangart<br>date: 2019-07-18 15:45:03<br>top: ture</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>新手github常用命令教程</title>
    <url>/2023/06/23/GitHub/%E6%96%B0%E6%89%8Bgithub%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="无仓库，新建一个仓库并上传代码"><a href="#无仓库，新建一个仓库并上传代码" class="headerlink" title="无仓库，新建一个仓库并上传代码"></a>无仓库，新建一个仓库并上传代码</h1><p>1.在 GitHub 上创建一个新的仓库。在 GitHub 网站上登录并点击右上角的加号图标，选择 “New repository” 创建一个新的仓库。给仓库起一个名称，并选择是否设为公开或私有。</p>
<p>2.在本地项目中初始化 Git 仓库。打开你的项目文件夹，在命令行中执行以下命令来初始化 Git 仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure>

<p>3.将项目文件添加到 Git 仓库。使用以下命令将所有文件添加到 Git 仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure>

<p>4.如果你只想添加特定的文件，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add 文件名</span><br></pre></td></tr></table></figure>

<p>5.提交你的更改。使用以下命令提交你的更改，并添加一个提交消息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git commit -m <span class="string">&quot;提交消息&quot;</span></span><br></pre></td></tr></table></figure>

<p>6.将本地仓库与远程仓库关联。在 GitHub 上创建的仓库中，复制仓库的远程 URL。然后，在命令行中执行以下命令将本地仓库与远程仓库关联：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote add origin 远程仓库URL</span><br></pre></td></tr></table></figure>

<p>7.将远程仓库URL替换为你复制的远程仓库 URL。</p>
<p>8.推送代码到远程仓库。使用以下命令将代码推送到远程仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure>
<h1 id="已有仓库，拉取项目到本地"><a href="#已有仓库，拉取项目到本地" class="headerlink" title="已有仓库，拉取项目到本地"></a>已有仓库，拉取项目到本地</h1><p>1.在本地项目中，使用以下命令将远程仓库与本地仓库关联：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote add origin 远程仓库URL</span><br></pre></td></tr></table></figure>

<p>2.将远程仓库URL替换为你的远程仓库的 URL。</p>
<p>3.使用以下命令将远程仓库的代码拉取到本地仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure>

<h1 id="更新已上传过的项目"><a href="#更新已上传过的项目" class="headerlink" title="更新已上传过的项目"></a>更新已上传过的项目</h1><p>1.确保项目路径自上次上传后没有变更，在项目路径中输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;提交消息&quot;</span></span><br></pre></td></tr></table></figure>

<p>2.使用以下命令将本地仓库的更改推送到远程仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器事件循环</title>
    <url>/2023/07/02/%E5%89%8D%E7%AB%AF/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<h2 id="事件循环的背景"><a href="#事件循环的背景" class="headerlink" title="事件循环的背景"></a>事件循环的背景</h2><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><p>浏览器在运行中会开启很多进程，其中最主要的进程有：</p>
<ol>
<li>浏览器进程<br> 主要负责界面显示、用户交互、子进程管理等。浏览器进程内部又会启动多个线程处理不同的任务</li>
<li>网络进程<br> 负责加载网络资源。网络进程内容会启动多个线程来处理不同任务</li>
<li>渲染进程<br> 渲染进程启动后会开启一个<strong>渲染主线程</strong>，负责执行html、css、js代码。默认情况下，浏览器会为每一个标签页开启一个新的渲染进程，以保证不同的标签页之间互不影响</li>
</ol>
<h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><p>JS 是单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个，且承担诸多工作，如渲染页面、执行JS等，因此如果使用同步的方式，就很容易导致主线程产生阻塞，从而导致消息队列中的其他任务无法执行</p>
<p>所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络事件监听，主线程将任务交给其他线程去处理，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行</p>
<p>在这中异步模式下，最大限度的保证了单线程的流程执行</p>
<p><u>因此单线程是异步产生的原因，事件循环是异步的实现方式</u></p>
<h3 id="事件循环"><a href="#事件循环" class="headerlink" title="事件循环"></a>事件循环</h3><p>事件循环也称消息循环，是浏览器渲染主线程的工作方式。</p>
<p>循环指的是在不同的消息队列中进行循环，每次循环从当前队列中取出第一个任务执行，其他线程只需要在合适的时候将任务加入到队列末尾即可</p>
<h3 id="队列优先级"><a href="#队列优先级" class="headerlink" title="队列优先级"></a>队列优先级</h3><ul>
<li>每个任务有不同的类型，同类型的任务必须在同一个队列，不同的任务可以处于不同的队列。不同的队列有不同的优先级，在一次事件循环中，有浏览器决定取哪一个队列的任务。</li>
<li>浏览器必须有一个微队列，微队列的任务一定具有最高的优先级，必须优先调度执行。</li>
</ul>
<p>目前包含以下队列：</p>
<ul>
<li>微队列：用户存放需要最快执行的任务，优先级最高</li>
<li>交互队列：用于存放用户操作后产生的事件处理任务，优先级高</li>
<li>延时队列：用于存放计时器到达后的回调任务，优先级中</li>
</ul>
<p>添加到微队列的方式主要是Promise、MutationObserver和async&#x2F;await<br>例如：</p>
<figure class="highlight javascript"><figcaption><span>Promise</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Done&#x27;</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><figcaption><span>MutationObserver</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建 MutationObserver 实例，并指定回调函数</span></span><br><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function">(<span class="params">mutationsList, observer</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 处理 DOM 变化的逻辑</span></span><br><span class="line">  mutationsList.<span class="title function_">forEach</span>(<span class="function"><span class="params">mutation</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(mutation.<span class="property">type</span>); <span class="comment">// 打印变化的类型</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(mutation.<span class="property">target</span>); <span class="comment">// 打印发生变化的节点</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 observe 方法指定要监听的 DOM 元素和变化类型</span></span><br><span class="line">observer.<span class="title function_">observe</span>(<span class="variable language_">document</span>.<span class="property">body</span>, &#123; <span class="attr">childList</span>: <span class="literal">true</span>, <span class="attr">subtree</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止监听 DOM 变化</span></span><br><span class="line">observer.<span class="title function_">disconnect</span>();</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><figcaption><span>async/await</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//当调用 fetchData 函数时，它会立即返回一个 Promise 对象</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Start&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//await 表达式会在执行时创建一个微任务，并将其添加到微任务队列中,同时暂停主线程的执行。</span></span><br><span class="line">  <span class="comment">//这样可以确保 await 后面的代码在前面的异步操作完成后才会执行。</span></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://api.example.com/data&#x27;</span>); </span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> result.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Data:&#x27;</span>, data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Before&#x27;</span>);</span><br><span class="line"><span class="title function_">fetchData</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;After&#x27;</span>);</span><br><span class="line"></span><br><span class="line">最后结果：</span><br><span class="line"><span class="title class_">Before</span></span><br><span class="line"><span class="title class_">After</span></span><br><span class="line"><span class="title class_">Start</span></span><br><span class="line"><span class="title class_">Data</span>: &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>wx.getUserProfile 不出现弹窗</title>
    <url>/2023/06/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/wx-getUserProfile-%E4%B8%8D%E5%87%BA%E7%8E%B0%E5%BC%B9%E7%AA%97/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>使用wx.getUserProfile 获取用户信息，但是不出现弹窗就直接获取到了用户信息，且返回灰色头像，和“微信用户”昵称</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>原来这个接口在22年5月的时候被回收了，低版本调试库才会正常显示，高版本则会返回灰色头像和默认的“微信用户”昵称<br>官方的解释是：实践中发现有部分小程序，在用户刚打开小程序时就要求收集用户的微信昵称头像，或者在支付前等不合理路径上要求授权。如果用户拒绝授权，则无法使用小程序或相关功能。在已经获取用户的 openId 与 unionId 信息情况下，用户的微信昵称与头像并不是用户使用小程序的必要条件。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>我的解决方法是手动加一个权限弹窗</p>
<img src="/images/%E6%89%8B%E5%8A%A8%E5%BC%B9%E7%AA%97.gif" class="center" width="200" title="权限弹窗">

<h3 id="授权弹窗"><a href="#授权弹窗" class="headerlink" title="授权弹窗"></a>授权弹窗</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">signupAndLogin</span>(<span class="params"></span>) &#123;            <span class="comment">//bindtap事件</span></span><br><span class="line">    wx.<span class="title function_">showModal</span>(&#123;                     <span class="comment">//手动授权弹窗</span></span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;授权登录提示&#x27;</span>,</span><br><span class="line">      <span class="attr">content</span>: <span class="string">&#x27;是否允许授权？&#x27;</span>,</span><br><span class="line">      <span class="attr">showCancel</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">confirmText</span>: <span class="string">&#x27;允许&#x27;</span>,</span><br><span class="line">      <span class="attr">confirmColor</span>: <span class="string">&#x27;#669F76&#x27;</span>,</span><br><span class="line">      <span class="attr">cancelColor</span>: <span class="string">&#x27;#CC463D&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">async</span> res =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;     <span class="comment">//用户确认</span></span><br><span class="line">          <span class="keyword">const</span> &#123; <span class="attr">userInfo</span>: &#123; nickName, avatarUrl &#125; &#125; = <span class="keyword">await</span></span><br><span class="line">            wx.<span class="title function_">getUserProfile</span>(&#123;    <span class="comment">//获取用户信息，最新版本已不支持弹窗</span></span><br><span class="line">              <span class="attr">desc</span>: <span class="string">&#x27;用户授权&#x27;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line"> </span><br><span class="line">          <span class="keyword">let</span> &#123; result &#125; = <span class="keyword">await</span> wx.<span class="property">cloud</span>.<span class="title function_">callFunction</span>(&#123;  <span class="comment">// 调用云函数</span></span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;loginOrSignup&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">              nickName,</span><br><span class="line">              avatarUrl</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123; <span class="attr">userInfo</span>: result &#125;)</span><br><span class="line">          <span class="title function_">getApp</span>().<span class="property">globalData</span>.<span class="property">userStatus</span> = <span class="literal">true</span>   <span class="comment">//用于检查用户是否登录的全局变量</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;     <span class="comment">//用户取消</span></span><br><span class="line">          wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;取消授权&#x27;</span>,</span><br><span class="line">            <span class="attr">mask</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h3 id="loginOrSignup云函数"><a href="#loginOrSignup云函数" class="headerlink" title="loginOrSignup云函数"></a>loginOrSignup云函数</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 云函数入口文件</span></span><br><span class="line"><span class="keyword">const</span> cloud = <span class="built_in">require</span>(<span class="string">&#x27;wx-server-sdk&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">cloud.<span class="title function_">init</span>(&#123; <span class="attr">env</span>: cloud.<span class="property">DYNAMIC_CURRENT_ENV</span> &#125;) <span class="comment">// 使用当前云环境</span></span><br><span class="line"><span class="keyword">const</span> db = cloud.<span class="title function_">database</span>()</span><br><span class="line"><span class="comment">// 云函数入口函数</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="variable constant_">OPENID</span> &#125; = cloud.<span class="title function_">getWXContext</span>()</span><br><span class="line">  <span class="keyword">const</span> &#123; nickName, avatarUrl &#125; = event</span><br><span class="line">  <span class="keyword">const</span> user_clct = db.<span class="title function_">collection</span>(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> user_clct.<span class="title function_">where</span>(&#123;    <span class="comment">//查询用户是否存在</span></span><br><span class="line">    <span class="attr">_openId</span>: <span class="variable constant_">OPENID</span></span><br><span class="line">  &#125;).<span class="title function_">get</span>()</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (data.<span class="property">length</span> === <span class="number">0</span>) &#123;                     <span class="comment">//如果用户不存在，添加用户</span></span><br><span class="line">    <span class="keyword">let</span> user = <span class="keyword">await</span> user_clct.<span class="title function_">add</span>(&#123;</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        nickName,</span><br><span class="line">        avatarUrl,</span><br><span class="line">        <span class="attr">_openId</span>: <span class="variable constant_">OPENID</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      nickName,</span><br><span class="line">      avatarUrl,</span><br><span class="line">      <span class="attr">_openId</span>: <span class="variable constant_">OPENID</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> data[<span class="number">0</span>]       <span class="comment">//如果用户存在，返回该用户信息</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="选择头像"><a href="#选择头像" class="headerlink" title="选择头像"></a>选择头像</h3><img src="/images/%E9%80%89%E6%8B%A9%E5%A4%B4%E5%83%8F.gif" class="center" width="200" title="权限弹窗">
<h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><figure class="highlight html"><figcaption><span>wxml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;chooseAvatar&quot;</span> <span class="attr">open-type</span>=<span class="string">&quot;chooseAvatar&quot;</span> <span class="attr">bindchooseavatar</span>=<span class="string">&quot;chooseAvatar&quot;</span> <span class="attr">plain</span>=<span class="string">&quot;ture&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 160rpx; border: none;color: #6e6e6e;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;userAvatar&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;userInfo.avatarUrl&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><figure class="highlight typescript"><figcaption><span>typescript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">chooseAvatar</span>(<span class="params">e: <span class="built_in">any</span></span>) &#123;                <span class="comment">//用户更换头像</span></span><br><span class="line">    <span class="comment">//e.detail 已经是 avatarUrl：&quot;...&quot;的格式</span></span><br><span class="line">    <span class="keyword">let</span> &#123; avatarUrl &#125; = e.<span class="property">detail</span></span><br><span class="line"> </span><br><span class="line">    wx.<span class="property">cloud</span>.<span class="title function_">callFunction</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;uploadAvatar&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        avatarUrl</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">async</span> res =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> &#123; result &#125; = <span class="keyword">await</span> wx.<span class="property">cloud</span>.<span class="title function_">callFunction</span>(&#123;  <span class="comment">// 调用登录云函数，不传参，用以更新页面中的用户信息</span></span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;loginOrSignup&#x27;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123; <span class="attr">userInfo</span>: result &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<h3 id="uploadAvatar，更新头像"><a href="#uploadAvatar，更新头像" class="headerlink" title="uploadAvatar，更新头像"></a>uploadAvatar，更新头像</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 云函数入口文件</span></span><br><span class="line"><span class="keyword">const</span> cloud = <span class="built_in">require</span>(<span class="string">&#x27;wx-server-sdk&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">cloud.<span class="title function_">init</span>(&#123; <span class="attr">env</span>: cloud.<span class="property">DYNAMIC_CURRENT_ENV</span> &#125;) <span class="comment">// 使用当前云环境</span></span><br><span class="line"><span class="keyword">const</span> db = cloud.<span class="title function_">database</span>()</span><br><span class="line"><span class="comment">// 云函数入口函数</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="variable constant_">OPENID</span> &#125; = cloud.<span class="title function_">getWXContext</span>()</span><br><span class="line">  <span class="keyword">const</span> &#123; avatarUrl &#125; = event</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    db.<span class="title function_">collection</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">where</span>(&#123;</span><br><span class="line">      <span class="attr">_openId</span>: <span class="variable constant_">OPENID</span></span><br><span class="line">    &#125;).<span class="title function_">update</span>(&#123;</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        avatarUrl</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">success</span>:<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatarUrl</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序实现类似qq界面侧滑效果</title>
    <url>/2023/06/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCqq%E7%95%8C%E9%9D%A2%E4%BE%A7%E6%BB%91%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h2 id="效果浏览"><a href="#效果浏览" class="headerlink" title="效果浏览"></a>效果浏览</h2><img src="/images/%E4%BE%A7%E6%BB%91%E7%95%8C%E9%9D%A2.gif" class="center" width="200" title="效果演示" alt="侧滑界面">

<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;outBox&quot;</span> <span class="attr">bindtouchstart</span>=<span class="string">&quot;out_touchStart&quot;</span> <span class="attr">bindtouchmove</span>=<span class="string">&quot;out_touchMove&quot;</span> <span class="attr">bindtouchend</span>=<span class="string">&quot;out_touchEnd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;width: 100vw;text-align: center;&quot;</span>&gt;</span>主界面<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;sliderPage&quot;</span> <span class="attr">style</span>=<span class="string">&quot;transform:translateX(&#123;&#123;moveX&#125;&#125;);&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span>侧滑界面<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="wxss"><a href="#wxss" class="headerlink" title="wxss"></a>wxss</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.outBox</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.466</span>);</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.sliderPage</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80vw</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.842</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="number">#00000038</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">80vw</span>);</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ts"><a href="#ts" class="headerlink" title="ts"></a>ts</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">fullWidth</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">vw</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">moveX</span>: <span class="string">&#x27;-80vw&#x27;</span>,</span><br><span class="line">    <span class="attr">startX</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">sliderActive</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">watchMoveX</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"> </span><br><span class="line">  <span class="title function_">out_touchStart</span>(<span class="params">e: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; touches &#125; = e</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123; <span class="attr">startX</span>: touches[<span class="number">0</span>].<span class="property">clientX</span> &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"> </span><br><span class="line">  <span class="title function_">out_touchMove</span>(<span class="params">e: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; touches &#125; = e</span><br><span class="line">    <span class="keyword">let</span> nowX = touches[<span class="number">0</span>].<span class="property">clientX</span></span><br><span class="line">    <span class="keyword">let</span> moveX = nowX - <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">startX</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">sliderActive</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (moveX &gt;= <span class="number">0</span> || moveX &lt; -(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">fullWidth</span> * <span class="number">0.8</span>)) <span class="keyword">return</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">moveX</span>: <span class="string">`<span class="subst">$&#123;moveX&#125;</span>px`</span>,</span><br><span class="line">        <span class="attr">watchMoveX</span>: moveX</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (moveX &lt;= <span class="number">0</span> || moveX &gt; (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">fullWidth</span> * <span class="number">0.8</span>)) <span class="keyword">return</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">moveX</span>: <span class="string">`<span class="subst">$&#123;-<span class="number">80</span> * <span class="variable language_">this</span>.data.vw + moveX&#125;</span>px`</span>,</span><br><span class="line">        <span class="attr">watchMoveX</span>: moveX</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"> </span><br><span class="line">  <span class="title function_">out_touchEnd</span>(<span class="params">e: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">sliderActive</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">watchMoveX</span> &gt; (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">fullWidth</span> / <span class="number">4</span>)) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">          <span class="attr">moveX</span>: <span class="string">`<span class="subst">$&#123;<span class="number">0</span>&#125;</span>vw`</span>,</span><br><span class="line">          <span class="attr">sliderActive</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">watchMoveX</span>: <span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123; <span class="attr">moveX</span>: <span class="string">`<span class="subst">$&#123;-<span class="number">80</span>&#125;</span>vw`</span> &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">watchMoveX</span> &lt; -(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">fullWidth</span> / <span class="number">4</span>)) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">          <span class="attr">moveX</span>: <span class="string">`<span class="subst">$&#123;-<span class="number">80</span>&#125;</span>vw`</span>,</span><br><span class="line">          <span class="attr">sliderActive</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">watchMoveX</span>: <span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123; <span class="attr">moveX</span>: <span class="string">&#x27;0vw&#x27;</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// ------------------------------</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">createSelectorQuery</span>().<span class="title function_">select</span>(<span class="string">&quot;.outBox&quot;</span>).<span class="title function_">boundingClientRect</span>().<span class="title function_">exec</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">vw</span>: res[<span class="number">0</span>].<span class="property">width</span> / <span class="number">100</span>,</span><br><span class="line">        <span class="attr">fullWidth</span>: res[<span class="number">0</span>].<span class="property">width</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  ....<span class="comment">//省略其他周期函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>实现这种侧滑效果的方法有很多，这只是其中一种<br>两个界面是嵌套关系，因此可以只通过外部元素节点，也就是主界面的touch控制来实现滑动效果</p>
]]></content>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>前端工程师职业规划参考</title>
    <url>/2023/07/02/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E5%8F%82%E8%80%83/</url>
    <content><![CDATA[<h3 id="1-初级前端工程师（1-2年）："><a href="#1-初级前端工程师（1-2年）：" class="headerlink" title="1. 初级前端工程师（1-2年）："></a>1. 初级前端工程师（1-2年）：</h3><ul>
<li>学习HTML、CSS和JavaScript等基础知识，并熟练运用它们进行网页开发。</li>
<li>参与项目团队，积累实际项目经验。</li>
<li>学习和掌握常用的前端框架和工具，如React、Vue.js、Webpack等。</li>
<li>参与培训课程和技术社区，不断学习和提升技能。</li>
</ul>
<h3 id="2-中级前端工程师（3-5年）："><a href="#2-中级前端工程师（3-5年）：" class="headerlink" title="2. 中级前端工程师（3-5年）："></a>2. 中级前端工程师（3-5年）：</h3><ul>
<li>在项目中承担更复杂的前端开发任务，如开发响应式网站、移动端应用等。</li>
<li>深入学习和掌握前端框架和库的原理和使用技巧。</li>
<li>学习和应用前端最佳实践，如性能优化、代码规范等。</li>
<li>参与团队协作和项目管理，提升沟通和领导能力。</li>
</ul>
<h3 id="3-高级前端工程师（5年以上）："><a href="#3-高级前端工程师（5年以上）：" class="headerlink" title="3. 高级前端工程师（5年以上）："></a>3. 高级前端工程师（5年以上）：</h3><ul>
<li>在复杂项目中担任技术负责人或架构师角色，负责前端架构设计和技术选型。</li>
<li>深入研究前端领域的新技术和趋势，并引领团队进行技术创新和实践。</li>
<li>参与开源项目和技术社区，分享经验和贡献代码。</li>
<li>建立自己的技术品牌和影响力，如通过博客、演讲等方式分享经验和见解。</li>
</ul>
<h3 id="4-职业发展方向："><a href="#4-职业发展方向：" class="headerlink" title="4. 职业发展方向："></a>4. 职业发展方向：</h3><ul>
<li>前端架构师：专注于前端架构设计和技术选型，负责复杂项目的技术规划和架构设计。</li>
<li>前端团队管理：发展管理和领导能力，负责前端团队的招聘、培训和项目管理。</li>
<li>UX&#x2F;UI设计师：学习和掌握用户体验和界面设计的知识，负责前端界面设计和交互优化。</li>
<li>技术顾问：通过积累丰富的经验和知识，为企业提供前端技术咨询和解决方案。</li>
</ul>
<p>这只是一个参考，可以根据自己的兴趣和职业目标进行调整和补充。重要的是制定一个明确的职业规划，并不断学习和发展自己的技能，以实现职业的持续成长和发展。</p>
]]></content>
      <tags>
        <tag>职业规划</tag>
      </tags>
  </entry>
  <entry>
    <title>后端工程师职业规划参考</title>
    <url>/2023/07/02/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E5%8F%82%E8%80%83/</url>
    <content><![CDATA[<h3 id="1-初级后端工程师（1-3年）："><a href="#1-初级后端工程师（1-3年）：" class="headerlink" title="1. 初级后端工程师（1-3年）："></a>1. 初级后端工程师（1-3年）：</h3><ul>
<li>掌握一门主流后端开发语言，如Java、Python或Node.js。</li>
<li>学习并应用常见的后端开发框架和技术，如Spring、Django或Express.js。</li>
<li>参与项目开发，负责后端功能的实现和数据库设计。</li>
<li>学习和应用基本的软件工程原则和最佳实践。</li>
<li>持续学习和提升编程和问题解决能力。</li>
</ul>
<h3 id="2-中级后端工程师（3-5年）："><a href="#2-中级后端工程师（3-5年）：" class="headerlink" title="2. 中级后端工程师（3-5年）："></a>2. 中级后端工程师（3-5年）：</h3><ul>
<li>深入研究和应用后端开发技术栈，如数据库优化、性能调优、缓存等。</li>
<li>参与设计和开发复杂的后端系统，包括分布式系统和微服务架构。</li>
<li>学习和应用设计模式和架构原则，提高系统的可扩展性和可维护性。</li>
<li>参与团队的技术选型和架构设计，负责解决技术难题和挑战。</li>
<li>培养团队合作和沟通能力，开始指导和培养初级工程师。</li>
</ul>
<h3 id="3-高级后端工程师（5年以上）："><a href="#3-高级后端工程师（5年以上）：" class="headerlink" title="3. 高级后端工程师（5年以上）："></a>3. 高级后端工程师（5年以上）：</h3><ul>
<li>深入研究和应用领域专有的后端技术，如金融领域的支付系统、电子商务领域的订单处理系统等。</li>
<li>参与大型项目的架构设计和技术规划，负责解决复杂的技术挑战。</li>
<li>深入理解和应用云计算和容器化技术，如Docker和Kubernetes。</li>
<li>参与行业内的研究和交流，提升自己在该领域的专业影响力。</li>
<li>培养和指导团队成员的技术能力和职业发展。</li>
</ul>
<h3 id="4-技术管理者："><a href="#4-技术管理者：" class="headerlink" title="4. 技术管理者："></a>4. 技术管理者：</h3><ul>
<li>学习项目管理和团队管理知识，培养领导力和沟通能力。</li>
<li>担任技术团队的领导角色，负责项目的规划和执行。</li>
<li>帮助团队成员制定个人的职业规划，并提供指导和支持。</li>
<li>参与公司的技术战略规划和决策，推动团队的技术创新和发展。</li>
</ul>
]]></content>
      <tags>
        <tag>职业规划</tag>
      </tags>
  </entry>
  <entry>
    <title>网络工程师职业规划参考</title>
    <url>/2023/07/02/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E5%8F%82%E8%80%83/</url>
    <content><![CDATA[<h3 id="1-初级网络工程师（1-2年）："><a href="#1-初级网络工程师（1-2年）：" class="headerlink" title="1. 初级网络工程师（1-2年）："></a>1. 初级网络工程师（1-2年）：</h3><ul>
<li>学习和掌握计算机网络的基础知识，如TCP&#x2F;IP协议、网络拓扑等。</li>
<li>熟悉常用的网络设备和工具，如交换机、路由器、网络监控软件等。</li>
<li>参与网络设备的配置和维护工作，解决常见的网络故障和问题。</li>
<li>学习和掌握网络安全的基础知识，如防火墙、VPN等。</li>
</ul>
<h3 id="2-中级网络工程师（3-5年）："><a href="#2-中级网络工程师（3-5年）：" class="headerlink" title="2. 中级网络工程师（3-5年）："></a>2. 中级网络工程师（3-5年）：</h3><ul>
<li>参与大型网络项目的规划和实施，如企业网络升级、数据中心建设等。</li>
<li>深入学习和掌握网络技术的高级知识，如VLAN、路由协议、负载均衡等。</li>
<li>学习和应用网络性能优化的技术和方法，提高网络的稳定性和响应速度。</li>
<li>参与网络安全方面的工作，如网络漏洞扫描、入侵检测等。</li>
</ul>
<h3 id="3-高级网络工程师（5年以上）："><a href="#3-高级网络工程师（5年以上）：" class="headerlink" title="3. 高级网络工程师（5年以上）："></a>3. 高级网络工程师（5年以上）：</h3><ul>
<li>在复杂网络环境下担任技术负责人或架构师角色，负责网络架构设计和规划。</li>
<li>深入研究网络领域的新技术和趋势，并引领团队进行技术创新和实践。</li>
<li>参与网络安全的高级工作，如安全策略制定、事件响应等。</li>
<li>建立自己的技术品牌和影响力，如通过博客、演讲等方式分享经验和见解。</li>
</ul>
<h3 id="4-职业发展方向："><a href="#4-职业发展方向：" class="headerlink" title="4. 职业发展方向："></a>4. 职业发展方向：</h3><ul>
<li>网络架构师：专注于网络架构设计和规划，负责复杂网络项目的技术规划和架构设计。</li>
<li>网络安全专家：深入研究网络安全领域，负责企业的网络安全策略和漏洞修复。</li>
<li>云计算工程师：学习和掌握云计算和虚拟化技术，负责企业的云平台建设和管理。</li>
<li>网络运维经理：发展管理和领导能力，负责网络团队的招聘、培训和运维管理。</li>
</ul>
<p>这只是一个参考，可以根据自己的兴趣和职业目标进行调整和补充。重要的是制定一个明确的职业规划，并不断学习和发展自己的技能，以实现职业的持续成长和发展。</p>
]]></content>
      <tags>
        <tag>职业规划</tag>
      </tags>
  </entry>
  <entry>
    <title>软件测试工程师职业规划参考</title>
    <url>/2023/07/02/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<h3 id="1-初级软件测试工程师（1-2年）："><a href="#1-初级软件测试工程师（1-2年）：" class="headerlink" title="1. 初级软件测试工程师（1-2年）："></a>1. 初级软件测试工程师（1-2年）：</h3><ul>
<li>学习和掌握软件测试的基础知识，如测试方法、测试文档编写等。</li>
<li>熟悉常用的测试工具和技术，如自动化测试工具、性能测试工具等。</li>
<li>参与软件测试项目，执行测试计划、编写测试用例、执行测试并记录缺陷。</li>
</ul>
<h3 id="2-中级软件测试工程师（3-5年）："><a href="#2-中级软件测试工程师（3-5年）：" class="headerlink" title="2. 中级软件测试工程师（3-5年）："></a>2. 中级软件测试工程师（3-5年）：</h3><ul>
<li>深入学习和掌握软件测试的高级知识，如测试策略、测试环境配置等。</li>
<li>参与复杂软件项目的测试规划和设计，提出测试方案和策略。</li>
<li>掌握自动化测试技术，编写和执行自动化测试脚本，提高测试效率和质量。</li>
<li>学习和应用性能测试和安全测试的技术，提高软件的性能和安全性。</li>
</ul>
<h3 id="3-高级软件测试工程师（5年以上）："><a href="#3-高级软件测试工程师（5年以上）：" class="headerlink" title="3. 高级软件测试工程师（5年以上）："></a>3. 高级软件测试工程师（5年以上）：</h3><ul>
<li>在复杂项目中担任测试团队的技术负责人或测试架构师角色。</li>
<li>深入研究软件测试领域的新技术和趋势，并引领团队进行技术创新和实践。</li>
<li>参与软件质量管理方面的工作，如质量度量、过程改进等。</li>
<li>建立自己的技术品牌和影响力，如通过博客、演讲等方式分享经验和见解。</li>
</ul>
<h3 id="4-职业发展方向："><a href="#4-职业发展方向：" class="headerlink" title="4. 职业发展方向："></a>4. 职业发展方向：</h3><ul>
<li>质量保证经理：发展管理和领导能力，负责整个软件质量保证流程的管理和改进。</li>
<li>自动化测试专家：深入研究自动化测试技术和工具，负责团队的自动化测试实施。</li>
<li>安全测试专家：学习和掌握安全测试的知识和技术，负责软件安全测试和漏洞修复。</li>
<li>敏捷测试专家：学习和掌握敏捷开发和测试方法，负责敏捷团队的测试工作。</li>
</ul>
]]></content>
      <tags>
        <tag>职业规划</tag>
      </tags>
  </entry>
</search>
